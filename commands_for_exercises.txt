##Logging to Discovery:
ssh -Y <yourusername>@login.discovery.neu.edu

##Copying training material to Discovery using 'scp':
git clone <url>

##Exercise 1:
# During training:
srun --partition=reservation --reservation=fall2022_gpu_training --nodes=1 --cpus-per-task=1 --gres=gpu:p100:1 --mem=2G --time=00:30:00 --pty /bin/bash

# Outside of training:
srun --partition=gpu --nodes=1 â€“-cpus-per-task=1 --pty --gres=gpu:p100:1 --mem=10G --time=02:00:00 /bin/bash

# Environment build in your $HOME directory steps:
module list
module load cuda/11.1
module load anaconda3/2021.05
conda create --name TF_env python=3.7 anaconda -y

## Exercise 2:
srun --partition=gpu --nodes=1 --cpus-per-task=1 --gres=gpu:1 --mem=2G --time=00:05:00 --pty /bin/bash
nvidia-smi
exit

srun --partition=gpu --nodes=1 --cpus-per-task=1 --gres=gpu:p100:1 --mem=2G --time=00:05:00 --pty /bin/bash
nvidia-smi
exit

sinfo -p gpu --Format=nodes,cpus,nodelist,gres,features

sinfo -p gpu --Format=nodes,cpus,nodelist,gres,statecompact,features


## Exercise 1:
# If not already loaded:
module load cuda/11.1 
module load anaconda3/2021.05

# Load the environment:
source activate TF_env
# or
source activate /work/bootcamp/gpu_training/tf_env

# Install gpu-enabled TF inside the virtual environment:
conda install -c anaconda tensorflow-gpu -y

# Test if GPU device is detected with TF:
(TF_env) $ python -c 'import tensorflow as tf; print(tf.test.is_built_with_cuda())'

# Deactivate conda environment
conda deactivate

## Exercise 3
sbatch main_tf.bash

